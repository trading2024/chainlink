#!/usr/bin/env bash
set -ex
OUTPUT_FILE=${OUTPUT_FILE:-"./output.txt"}
TIMEOUT="${TIMEOUT:-10s}"
COUNT="${COUNT:-5}"

echo "Failed tests and panics: ---------------------"
echo ""
if [[ $GITHUB_EVENT_NAME == "schedule" ]]; then
  if [[  $DEBUG == "true" ]]; then 
    GORACE="log_path=$PWD/race" go test -json -vet=off -race -shuffle on -timeout "$TIMEOUT" -count "$COUNT" $1 | tee $OUTPUT_FILE
  else
    GORACE="log_path=$PWD/race" go test -vet=off -race -shuffle on -timeout "$TIMEOUT" -count "$COUNT" $1 | cat > $OUTPUT_FILE
  fi
else
  if [[ $DEBUG == "true" ]]; then 
        GORACE="log_path=$PWD/race" go test -json -vet=off -race -shuffle on -timeout "$TIMEOUT" -count "$COUNT" $1 | tee $OUTPUT_FILE
  else
    GORACE="log_path=$PWD/race" go test -vet=off -race -shuffle on -timeout "$TIMEOUT" -count "$COUNT" $1 | cat > $OUTPUT_FILE
  fi
fi
EXITCODE=${PIPESTATUS[0]}


# Fail if any race logs are present.
if ls race.* &>/dev/null
then
  echo "Race(s) detected"
  exit 1
fi
if test $EXITCODE -gt 1
then
  exit $EXITCODE
else
  exit 0
fi
